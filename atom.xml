<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zdeněk Drahoš</title>
  <subtitle>Zdeněk Drahoš blog</subtitle>
  <id>http://zdenekdrahos.bitbucket.org/</id>
  <link href="http://zdenekdrahos.bitbucket.org/"/>
  <link href="http://zdenekdrahos.bitbucket.org/atom.xml" rel="self" type="application/atom+xml"/>
  <updated>2016-01-1T15:07:00+00:00</updated>
  <author>
    <name>Zdeněk Drahoš</name>
  </author>
  <entry xml:lang="cs">
    <title>Nedostatky Nette při přechodu ze Symfony2</title>
    <link href="https://quip.com/1DAjAVxx9gZ8"/>
    <id>https://quip.com/1DAjAVxx9gZ8</id>
    <updated>2016-01-13T16:37:00+00:00</updated>
    <summary>Předchozí projekty, na kterých jsem pracoval, byly v Symfony. Jakmile potom přecházíte z jednoho do druhého, 
tak se vždycky najde pár věcí, které jsou v jednom či druhém řešeny lépe. Framework nikdy nevyhoví všem,
tak jsem sepsal, s čím bojuji v Nette. 
</summary>
  </entry>
  <entry xml:lang="en">
    <title>HTTP Caching in Symfony2 - max-age, ETag &amp; gzip</title>
    <link href="https://coderwall.com/p/rl6v7a"/>
    <id>https://coderwall.com/p/rl6v7a</id>
    <updated>2015-02-20T09:59:00+00:00</updated>
    <summary>Symfony is cool, HTTP cache is cool, so HTTP cache in Symfony is even cooler.
Still estimates went south when we implemented max-age and ETag. By we I mean myself, Václav Novotný and Jenkins.
</summary>
  </entry>
  <entry xml:lang="en">
    <title>Cleaner Symfony forms</title>
    <link href="https://coderwall.com/p/87ntkg"/>
    <id>https://coderwall.com/p/87ntkg</id>
    <updated>2015-01-09T17:14:00+00:00</updated>
    <summary>Forms are essential component for development of Symfony web application. 
But if I look at typical Symfony form then I see several violations of Four Rules of Simple Design:
duplicated form alias, unnecessary coupling to Symfony, optional $options.
</summary>
  </entry>
  <entry xml:lang="en">
    <title>Optimizing single page Middleman website</title>
    <link href="https://coderwall.com/p/xcvxga"/>
    <id>https://coderwall.com/p/xcvxga</id>
    <updated>2014-12-27T16:01:00+00:00</updated>
    <summary>Single page website is even better when user downloads complete content in one HTTP request.
No additional requests for CSS and JavaScript files. Middleman handles file-size optimization very well, 
so the only thing you must do is inlining assets.
</summary>
  </entry>
  <entry xml:lang="en">
    <title>Generate .htaccess in Middleman</title>
    <link href="https://coderwall.com/p/daflfq"/>
    <id>https://coderwall.com/p/daflfq</id>
    <updated>2014-12-27T14:55:00+00:00</updated>
    <summary>Writing .htaccess file manually can be exhausting because a lot of Apache directives must be duplicated. 
If you use Middleman for generating static websites, you can use it for .htaccess too.
Define source data in yml and loop the data in htaccess template.
</summary>
  </entry>
  <entry xml:lang="en">
    <title>Dispatch Symfony events in transactions</title>
    <link href="https://coderwall.com/p/zfvjsq"/>
    <id>https://coderwall.com/p/zfvjsq</id>
    <updated>2014-12-22T12:10:00+00:00</updated>
    <summary>Symfony dispatcher is powerful tool, but as in any framework maybe it's too much designed for general purposes.
One missing use case is dispatching event in transaction. For example when one listener failed, then you don't
want to insert rows to database.
</summary>
  </entry>
</feed>
